# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  OA_SCRIPT_DIR:
    description: "Working directory containing the scripts"
  OA_TMP_DIR:
    description: "Directory for temporary files"
  OA_ENV_FILE:
    description: "Path to the .env file"
  OA_N_JOBS:
    description: "Number of jobs for postgres parallel flattening"
    value: "15"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  # Provides credentials to pip to access private GitLab PyPi index.
  - echo "machine gitlab.pik-potsdam.de" > ~/.netrc
  - echo "login gitlab-ci-token" >> ~/.netrc
  - echo "password ${CI_JOB_TOKEN}" >> ~/.netrc

stages:
  - build
  - sync
  - solr
  - postgres

Setup-environment|1:
  stage: build
  tags:
    - rechner
  script:
    - echo "Current working directory and user"
    - pwd
    - whoami
    - groups
    - echo $HOME
    - echo "Reset git config"
    - rm -f /home/gitlab-runner/.gitconfig
    - git config --global url."https://gitlab.pik-potsdam.de/".insteadOf "ssh://git@gitlab.pik-potsdam.de/"
    - git config --global user.name gitlab-runner
    - git config --global user.email gitlab-runner@gitlab.pik-potsdam.de
    - git config --global -l --show-origin
    - git config --global --add safe.directory "$OA_SCRIPT_DIR"
    #
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_TMP_DIR"
    - echo "$OA_ENV_FILE"
    #
    - cd "$OA_SCRIPT_DIR" || exit
    #
    - echo "Dropping virtual environment"
    - pwd
    - rm -rf venv
    - echo "Fetching updated source"
    - git stash  # "reset" softly by stashing (in case files changed)
    - git pull origin main  # pull from origin
    - echo "Creating new virtual environment"
    - python3.11 -m venv venv
    - source venv/bin/activate
    - which python
    - python -V
    - echo "Installing requirements"
    - pip install -r openalex-ingest/requirements.txt
  when: manual
  allow_failure: false


Setup-environment|2:
  stage: build
  tags:
    - rechner
  script:
    - echo "Current working directory and user"
    - pwd
    - whoami
    - groups
    - echo $HOME
    - echo "Reset git config"
    - rm -f /home/gitlab-runner/.gitconfig
    - git config --global url."https://gitlab.pik-potsdam.de/".insteadOf "ssh://git@gitlab.pik-potsdam.de/"
    - git config --global user.name gitlab-runner
    - git config --global user.email gitlab-runner@gitlab.pik-potsdam.de
    - git config --global -l --show-origin
    - git config --global --add safe.directory "$OA_SCRIPT_DIR"
    #
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_TMP_DIR"
    - echo "$OA_ENV_FILE"
    #
    - cd "$OA_SCRIPT_DIR" || exit
    #
    - echo "Dropping virtual environment"
    - pwd
    - rm -rf venv
    - echo "Fetching updated source"
    - git stash  # "reset" softly by stashing (in case files changed)
    - git pull origin main  # pull from origin
    - echo "Creating new virtual environment"
    - python3.11 -m venv venv
    - source venv/bin/activate
    - which python
    - python -V
    - echo "Installing requirements"
    - pip install -r openalex-ingest/requirements.txt
  when: manual
  allow_failure: false

Fetch-S3-bucket|1:
  stage: sync
  needs: ["Setup-environment|1"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_TMP_DIR"
    - echo "$OA_ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --sync --no-progress --with-sudo
Fetch-S3-bucket|2:
  stage: sync
  needs: ["Setup-environment|2"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_TMP_DIR"
    - echo "$OA_ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --sync --no-progress --with-sudo


Solr-second:
  stage: solr
  needs: ["Fetch-S3-bucket|1"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --solr --solr-tmp --with-tmp
Solr-import:
  stage: solr
  needs: ["Solr-second"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --solr --solr-import-full --solr-clr --with-tmp
Solr-switch:
  stage: solr
  needs: ["Solr-import"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --solr --solr-swp --with-sudo

Postgres-flat:
  stage: postgres
  needs: ["Fetch-S3-bucket|2"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$OA_SCRIPT_DIR"
    - echo "$OA_TMP_DIR"
    - echo "$OA_ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --pg --pg-flat --override --pg-import-full --jobs $OA_N_JOBS

Postgres-prep:
  stage: postgres
  needs: ["Postgres-flat"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$SCRIPT_DIR"
    - echo "$TMP_DIR"
    - echo "$ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --pg --pg-tmp --with-sudo

Postgres-import:
  stage: postgres
  needs: ["Postgres-prep"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$SCRIPT_DIR"
    - echo "$TMP_DIR"
    - echo "$ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --pg --pg-import --with-tmp

Postgres-swap:
  stage: postgres
  needs: ["Postgres-import"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$SCRIPT_DIR"
    - echo "$TMP_DIR"
    - echo "$ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --pg --pg-swp --with-tmp

Postgres-indices:
  stage: postgres
  needs: ["Postgres-swap"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$SCRIPT_DIR"
    - echo "$TMP_DIR"
    - echo "$ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --pg --pg-ind

Postgres-clean:
  stage: postgres
  needs: ["Postgres-indices"]
  when: on_success
  tags:
    - rechner
  script:
    - echo "$SCRIPT_DIR"
    - echo "$TMP_DIR"
    - echo "$ENV_FILE"
    - cd "$OA_SCRIPT_DIR/openalex-ingest" || exit
    - ./update.sh --config "$OA_ENV_FILE" --pg --pg-clr --with-sudo
